{"version":3,"file":"static/js/40.9151f00b.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Title/title.module.css?b982","components/Title/Title.jsx","webpack://react-homework-template/./src/components/ContactForm/contactForm.module.css?2173","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/Contact/contact.module.scss?7bdd","components/ContactList/Contact/Contact.jsx","webpack://react-homework-template/./src/components/ContactList/contactList.module.css?ddc0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/filter.module.css?e01c","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Pages/ContactsPage.module.scss?5815","components/Pages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"title_title__2rbOy\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './title.module.css'\n\nconst Title = ({ title }) => {\n  return <p className={css.title}>{title}</p>;\n};\n\nTitle.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Title;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"contactForm_form__3ay0L\",\"div\":\"contactForm_div__Uszr9\",\"label\":\"contactForm_label__WakW9\",\"input\":\"contactForm_input__wCtae\",\"button\":\"contactForm_button__JixDz\"};","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAddContact } from 'redux/thunks/contactsThunks';\nimport { selectAllContacts } from 'redux/selectors';\n\nimport css from './contactForm.module.css';\n\nconst ContactForm = () => {\n  const [inputName, setInputName] = useState('');\n  const [inputNumber, setInputNumber] = useState('');\n  const contacts = useSelector(selectAllContacts);\n\n  const dispatch = useDispatch();\n\n  const setersMap = {\n    inputName: setInputName,\n    inputNumber: setInputNumber,\n  };\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n    setersMap[name](value);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const namesArr = contacts.map(el => el.name);\n    if (!namesArr.includes(inputName.toLocaleLowerCase())) {\n      dispatch(\n        fetchAddContact({\n          name: inputName,\n          number: inputNumber,\n        })\n      );\n    } else {\n      alert(`\"${inputName}\" is already in contact.`);\n    }\n    setInputName('');\n    setInputNumber('');\n  };\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.label} htmlFor=\"name\">\n        Name\n      </label>\n      <input\n        className={css.input}\n        type=\"text\"\n        name=\"inputName\"\n        id=\"name\"\n        placeholder=\"Enter name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        value={inputName}\n        required\n        onChange={handleChange}\n      />\n\n      <label className={css.label} htmlFor=\"number\">\n        Number\n      </label>\n      <input\n        className={css.input}\n        type=\"tel\"\n        name=\"inputNumber\"\n        id=\"number\"\n        placeholder=\"Enter number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        value={inputNumber}\n        required\n        onChange={handleChange}\n      />\n\n      <button className={css.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"contact\":\"contact_contact__zIaX8\",\"form\":\"contact_form__u94QM\",\"process\":\"contact_process__D8Bi7\",\"contactData\":\"contact_contactData__+x3Ix\",\"input\":\"contact_input__k-oNm\",\"button\":\"contact_button__BlnQr\",\"accept\":\"contact_accept__EFxsH\",\"edit\":\"contact_edit__x6odk\",\"del\":\"contact_del__vk3ur\"};","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { fetchDeleteContact } from 'redux/thunks/contactsThunks';\nimport { fetchEditContact } from 'redux/thunks/contactsThunks';\nimport { useSelector } from 'react-redux';\nimport { selectLastEditedId } from 'redux/selectors';\n\nimport css from './contact.module.scss';\n\nconst Contact = ({ id, name, number }) => {\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [isDeleting, setDeleting] = useState(false);\n  const [isEditing, setEditing] = useState(false);\n  const [isEditable, setEditable] = useState(false);\n  const lastEditedId = useSelector(selectLastEditedId);\n  const dispatch = useDispatch();\n  const settersMap = {\n    newName: setNewName,\n    newNumber: setNewNumber,\n  };\n\n  function handleChange(ev) {\n    const { name, value } = ev.target;\n    settersMap[name](value);\n  }\n\n  function handleDeleteContact() {\n    dispatch(fetchDeleteContact(id));\n    setDeleting(true);\n  }\n  function handleEditContact() {\n    setEditable(!isEditable);\n  }\n  function handleSubmit(ev) {\n    ev.preventDefault();\n    setEditing(!isEditing);\n    const editedContact = { id: id, obj: { name: newName, number: newNumber } };\n    dispatch(fetchEditContact(editedContact));\n  }\n\n  useEffect(() => {\n    setNewName(name);\n    setNewNumber(number);\n  }, [name, number]);\n  \n  useEffect(() => {\n    if (id === lastEditedId) {\n      setEditing(false);\n    }\n  }, [id, isEditing, lastEditedId]);\n\n  return (\n    <li className={css.contact}>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"newName\"\n          value={newName}\n          disabled={!isEditable}\n          onChange={handleChange}\n        />\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"newNumber\"\n          value={newNumber}\n          disabled={!isEditable}\n          onChange={handleChange}\n        />\n\n        {isEditing ? (\n          <span className={css.process}>Editing...</span>\n        ) : (\n          <button\n            className={[css.button, isEditable ? css.accept : css.edit].join(\n              ' '\n            )}\n            onClick={handleEditContact}\n            type={!isEditable ? 'submit' : 'button'}\n            disabled={isEditing}\n          >\n            {isEditable ? 'Accept' : 'Edit'}\n          </button>\n        )}\n        {isDeleting ? (\n        <span className={css.process}>Deleting...</span>\n      ) : (\n        <button\n          className={[css.button, css.del].join(' ')}\n          onClick={handleDeleteContact}\n          type=\"button\"\n        >\n          Delete\n        </button>\n      )}\n      </form>      \n    </li>\n  );\n};\n\nContact.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n\nexport default Contact;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsContainer\":\"contactList_contactsContainer__exPNI\",\"contactList\":\"contactList_contactList__rfM1N\",\"notification\":\"contactList_notification__6S07N\",\"donate\":\"contactList_donate__HdxU5\",\"listTitle\":\"contactList_listTitle__boYys\"};","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  selectAllContacts,\n  selectFilter,\n  selectIsLoading,\n} from 'redux/selectors';\n\nimport Contact from './Contact/Contact';\n\nimport css from './contactList.module.css';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectAllContacts);\n  const filter = useSelector(selectFilter);\n  const isLoading = useSelector(selectIsLoading);\n  const [filteredContacts, setFilteredContacts] = useState([]);\n\n  function applyFilter() {\n    setFilteredContacts(\n      contacts.filter(\n        ({ name }) =>\n          !(filter && !name.toLowerCase().includes(filter.toLowerCase()))\n      )\n    );\n  }\n  useEffect(() => {\n    applyFilter();\n    // eslint-disable-next-line\n  }, [filter, contacts]);\n  return (\n    <div className={css.contactsContainer}>\n      <p className={css.listTitle}>\n        {`Contacts list`}\n        {isLoading && <span className={css.donate}>{` (Loading...)`}</span>}\n      </p>\n      <ul className={css.contactList}>\n        {contacts.length === 0 && (\n          <li className={css.notification}>\n            <span\n              className={css.span}\n            >{`Database is empty, please add new contact.`}</span>\n          </li>\n        )}\n        {filteredContacts.map(el => (\n          <Contact key={el.id} id={el.id} name={el.name} number={el.number} />\n        ))}\n        {filteredContacts.length === 0 && (\n          <li className={css.notification}>\n            {filter !== '' && (\n              <span\n                className={css.span}\n              >{`Not founded any contacts on your request - \"${filter}\". Please try again. `}</span>\n            )}\n            {filter === '' && (\n              <span className={css.span}>{`Please type any name. `}</span>\n            )}\n            <span className={css.donate}>{`or donate ua army`}</span>\n          </li>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"filter_filter__HJEMj\",\"form\":\"filter_form__k2iVh\",\"div\":\"filter_div__nRVT-\",\"label\":\"filter_label__nHxuJ\",\"input\":\"filter_input__sX944\",\"button\":\"filter_button__XEUf9\"};","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { applyFilterAction } from 'redux/slices/sliceFilter';\nimport { fetchAllContacts } from 'redux/thunks/contactsThunks';\nimport { selectUserData } from 'redux/selectors';\n\nimport ContactList from 'components/ContactList/ContactList';\n\nimport css from './filter.module.css';\n\nconst Filter = () => {\n  const [filterInput, setFilterInput] = useState('');\n  const { token } = useSelector(selectUserData);\n\n  const dispatch = useDispatch();\n\n  function handleFilterChange(evt) {\n    const { target } = evt;\n    setFilterInput(target.value);\n    dispatch(applyFilterAction(target.value.trim()));\n  }\n\n  useEffect(() => {\n    if (token) {\n      dispatch(fetchAllContacts());\n    }\n  }, [dispatch, token]);\n  return (\n    <div className={css.filter}>\n      <form className={css.form}>\n        <label className={css.label} htmlFor=\"filter\">\n          Filter\n        </label>\n        <input\n          className={css.input}\n          name=\"filter\"\n          type=\"text\"\n          id=\"filter\"\n          placeholder=\"Enter name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          value={filterInput}\n          onChange={handleFilterChange}\n        />\n      </form>\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"MainPage\":\"ContactsPage_MainPage__BAU+J\"};","import React, { useEffect } from 'react';\n\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { selectUserData } from 'redux/selectors';\n\nimport Title from 'components/Title/Title';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\n\nimport scss from './ContactsPage.module.scss';\n\nconst ContactsPage = () => {\n  const { isLoggedIn } = useSelector(selectUserData);\n  const navigateTo = useNavigate();\n\n  useEffect(() => {\n    if (!isLoggedIn) {\n      navigateTo('/signin');\n    }\n  });\n  return (\n    <div className={scss.MainPage}>\n      <Title title=\"Add contact\" />\n      <ContactForm />\n      <Title title=\"Find contact\" />\n      <Filter />\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["title","className","css","useState","inputName","setInputName","inputNumber","setInputNumber","contacts","useSelector","selectAllContacts","dispatch","useDispatch","setersMap","handleChange","evt","target","name","value","onSubmit","preventDefault","map","el","includes","toLocaleLowerCase","alert","fetchAddContact","number","htmlFor","type","id","placeholder","pattern","required","onChange","newName","setNewName","newNumber","setNewNumber","isDeleting","setDeleting","isEditing","setEditing","isEditable","setEditable","lastEditedId","selectLastEditedId","settersMap","ev","useEffect","editedContact","obj","fetchEditContact","disabled","join","onClick","fetchDeleteContact","filter","selectFilter","isLoading","selectIsLoading","filteredContacts","setFilteredContacts","toLowerCase","length","filterInput","setFilterInput","token","selectUserData","fetchAllContacts","applyFilterAction","trim","isLoggedIn","navigateTo","useNavigate","scss"],"sourceRoot":""}